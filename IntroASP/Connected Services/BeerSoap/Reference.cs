//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BeerSoap
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BeerDto", Namespace="http://schemas.datacontract.org/2004/07/BeerSoapService")]
    public partial class BeerDto : object
    {
        
        private string BrandField;
        
        private string CountryCodeField;
        
        private string FlagUrlField;
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand
        {
            get
            {
                return this.BrandField;
            }
            set
            {
                this.BrandField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlagUrl
        {
            get
            {
                return this.FlagUrlField;
            }
            set
            {
                this.FlagUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrandOptionDto", Namespace="http://schemas.datacontract.org/2004/07/BeerSoapService")]
    public partial class BrandOptionDto : object
    {
        
        private int BrandIdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BrandId
        {
            get
            {
                return this.BrandIdField;
            }
            set
            {
                this.BrandIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BeerUpdateDto", Namespace="http://schemas.datacontract.org/2004/07/BeerSoapService")]
    public partial class BeerUpdateDto : object
    {
        
        private int BrandIdField;
        
        private string CountryCodeField;
        
        private string FlagUrlField;
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BrandId
        {
            get
            {
                return this.BrandIdField;
            }
            set
            {
                this.BrandIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlagUrl
        {
            get
            {
                return this.FlagUrlField;
            }
            set
            {
                this.FlagUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BeerCreateDto", Namespace="http://schemas.datacontract.org/2004/07/BeerSoapService")]
    public partial class BeerCreateDto : object
    {
        
        private int BrandIdField;
        
        private string CountryCodeField;
        
        private string FlagUrlField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int BrandId
        {
            get
            {
                return this.BrandIdField;
            }
            set
            {
                this.BrandIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlagUrl
        {
            get
            {
                return this.FlagUrlField;
            }
            set
            {
                this.FlagUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BeerSoap.IBeerService")]
    public interface IBeerService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerService/GetBeers", ReplyAction="http://tempuri.org/IBeerService/GetBeersResponse")]
        System.Threading.Tasks.Task<BeerSoap.BeerDto[]> GetBeersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerService/GetBrands", ReplyAction="http://tempuri.org/IBeerService/GetBrandsResponse")]
        System.Threading.Tasks.Task<BeerSoap.BrandOptionDto[]> GetBrandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerService/GetBeerForEdit", ReplyAction="http://tempuri.org/IBeerService/GetBeerForEditResponse")]
        System.Threading.Tasks.Task<BeerSoap.BeerUpdateDto> GetBeerForEditAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerService/CreateBeer", ReplyAction="http://tempuri.org/IBeerService/CreateBeerResponse")]
        System.Threading.Tasks.Task<int> CreateBeerAsync(BeerSoap.BeerCreateDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerService/DeleteBeer", ReplyAction="http://tempuri.org/IBeerService/DeleteBeerResponse")]
        System.Threading.Tasks.Task<bool> DeleteBeerAsync(int beerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBeerService/UpdateBeer", ReplyAction="http://tempuri.org/IBeerService/UpdateBeerResponse")]
        System.Threading.Tasks.Task<bool> UpdateBeerAsync(BeerSoap.BeerUpdateDto dto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface IBeerServiceChannel : BeerSoap.IBeerService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class BeerServiceClient : System.ServiceModel.ClientBase<BeerSoap.IBeerService>, BeerSoap.IBeerService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BeerServiceClient() : 
                base(BeerServiceClient.GetDefaultBinding(), BeerServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IBeerService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BeerServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(BeerServiceClient.GetBindingForEndpoint(endpointConfiguration), BeerServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BeerServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BeerServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BeerServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BeerServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BeerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<BeerSoap.BeerDto[]> GetBeersAsync()
        {
            return base.Channel.GetBeersAsync();
        }
        
        public System.Threading.Tasks.Task<BeerSoap.BrandOptionDto[]> GetBrandsAsync()
        {
            return base.Channel.GetBrandsAsync();
        }
        
        public System.Threading.Tasks.Task<BeerSoap.BeerUpdateDto> GetBeerForEditAsync(int id)
        {
            return base.Channel.GetBeerForEditAsync(id);
        }
        
        public System.Threading.Tasks.Task<int> CreateBeerAsync(BeerSoap.BeerCreateDto dto)
        {
            return base.Channel.CreateBeerAsync(dto);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBeerAsync(int beerId)
        {
            return base.Channel.DeleteBeerAsync(beerId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBeerAsync(BeerSoap.BeerUpdateDto dto)
        {
            return base.Channel.UpdateBeerAsync(dto);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBeerService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBeerService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:62255/Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return BeerServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IBeerService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return BeerServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IBeerService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IBeerService,
        }
    }
}
